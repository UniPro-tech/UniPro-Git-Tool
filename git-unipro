#!/bin/bash

echo "UniProject Git Tool"

subcommand="$1"
shift

msg_hook="#!/bin/bash
COMMIT_MSG=\$1

prefix=\$(head -n 1 \"\$COMMIT_MSG\" | awk '{ print \$1 }')
emoji=\"\"
case \$prefix in
    \"fix:\")
        emoji=\":bug:\"
        ;;
    \"feat:\")
        emoji=\":sparkles:\"
        ;;
    \"hammer:\")
        emoji=\":hammer:\"
        ;;
    \"delete:\")
        emoji=\":zap:\"
        ;;
    \"uppkg:\")
        emoji=\":arrow_up:\"
        ;;
    \"docs:\")
        emoji=\":memo:\"
        ;;
    \"style:\")
        emoji=\":art:\"
        ;;
    \"refactor:\")
        emoji=\":recycle:\"
        ;;
    \"chore:\")
        emoji=\":hammer:\"
        ;;
    \"tag:\")
        emoji=\":bookmark:\"
        ;;
    \"typo:\")
        emoji=\":pencil2:\"
        ;;
    \"revert:\" | \"Revert\")
        emoji=\":rewind:\"
        ;;
    *)
        echo \"The specified prefix is undefined.\"
        exit 1
        ;;
esac

sed -i \"1s/^\$prefix/\$emoji/\" \"\$COMMIT_MSG\"

echo \$prefix 
exit 0"

msg_template="# ==== Format ====
# \${prefix}: 実装の概要を50文字以下で記述
# ex)fix:ユーザー情報にnameが足りないのでnameを追加
#
# コミット本文(50文字で収まらない場合はこちらに)...
#一行目の上に#をつけずに入力してください。
#
# ==== Prefix ====
# feat     新規機能、新規ファイル追加
# delete   ファイル削除
# fix      バグ修正
# style    空白、セミコロン、行、コーディングフォーマットなどの修正
# refactor リファクタリング
# uppkg    依存関係のアップグレード
# chore    ビルド、補助ツール、ライブラリ関連、開発環境変更、更新等
# docs     ドキュメントのみ修正
# tag      タグの作成
# typo     タイポ
# revert コミットの打ち消し
#
# ==== Rules ====
# 1. コミット本文を記述する場合は、概要とコミット本文の間に空行1行あける
# 2. 概要は50文字以下で記述する
# 3. 概要の末尾はピリオドで終わらない
# 4. 概要は命令法で記述する
# 5. 本文は72文字で改行する
# 6. 本文ではhowではなくwhatとwhyを記述する"

colab_script="git config --local core.hooksPath ./.githooks
git config --local commit.template .gitmessage
echo \"Success!!\""

case $subcommand in
    i | init)
        echo "Installing..."
        echo "Creating .githooks Directory..."
        mkdir -p .githooks
        echo "Copying hooks files..."
        echo -e "$msg_hook" > ./.githooks/commit-msg
        echo "Copying .gitmessage file..."
        echo -e "$msg_template" > .gitmessage
        echo "Copying collaborater script..."
        echo -e "$colab_script" > colab_script.sh
        echo "Configuring git..."
        eval "$colab_script"
        echo "Configuring permission..."
        sudo chmod 777 ./colab_script.sh
        sudo chmod 777 ./.githooks/commit-msg
        ln -s .githooks/commit-msg .git/hooks/commit-msg
        ;;
    --help)
        echo "Usage: ./script.sh init - Initialize Git hooks and templates"
        ;;
    *)
        echo "Error: Invalid option or command."
        ;;
esac